---
name: Release

on:
  workflow_dispatch:
    inputs:
      java_version:
        description: Java version to use
        type: string
        required: false
        default: 17
      releaseVersion:
        description: "Default version to use when preparing a release."
        required: true
        default: "X.Y.Z"
      developmentVersion:
        description: "Default version to use for new local working copy."
        required: true
        default: "X.Y.Z-SNAPSHOT"
      dryRun:
        description: "Perform a dry run"
        required: true
        default: false
        type: boolean
      assets:
        description: "Path expression for Assets to upload."
        type: string
        required: false
        default: "target/checkout/cli/neo4jv?/target/*-distribution.zip"
      pages:
        description: "Path expression for Pages to upload."
        required: false
        default: "target/checkout/manual/target/generated-docs/"
      deployCurrentDoc:
        description: "Deploy the current documentation page."
        type: boolean
        required: false
        default: false
      sdkmanPublishEnabled:
        description: "SDKMAN: Publish"
        type: boolean
        required: false
        default: false
      sdkmanCandidate:
        description: "SDKMAN: candidate ID."
        type: string
        required: true
        default: "jqassistant"
      sdkmanSetDefault:
        description: "SDKMAN: default candidate."
        type: boolean
        required: false
        default: false

jobs:
  build:
    uses: jqassistant-tooling/jqassistant-github-actions/.github/workflows/release.yml@main
    with:
      releaseVersion: ${{ github.event.inputs.releaseVersion }}
      developmentVersion: ${{ github.event.inputs.developmentVersion }}
      dryRun: ${{ github.event.inputs.dryRun }}
      assets: ${{ github.event.inputs.assets }}
      pages: ${{ github.event.inputs.pages }}
      deployCurrentDoc: ${{ github.event.inputs.deployCurrentDoc }}
    secrets:
      ossrh_username: ${{ secrets.OSSRH_USERNAME }}
      ossrh_password: ${{ secrets.OSSRH_PASSWORD }}
      ossrh_signing_key: ${{ secrets.OSSRH_SIGNING_KEY }}
      ossrh_signing_password: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
      sonar_token: ${{ secrets.SONAR_TOKEN }}

  publish-via-sdkman:
    if: ${{ github.event.inputs.sdkmanPublish == 'true' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v5
        with:
          repository: sdkman/sdkman-release-action
          path: sdkman-release-action
      - uses: actions/checkout@v5
        with:
          repository: sdkman/sdkman-default-action
          path: sdkman-default-action
      - uses: ./sdkman-release-action
        with:
          CANDIDATE: ${{ github.event.inputs.sdkmanCandidate }}
          VERSION: ${{ github.event.inputs.releaseVersion }}
          URL: https://github.com/jQAssistant/jqassistant/releases/download/${{ github.event.inputs.releaseVersion }}/jqassistant-commandline-neo4jv5-${{ github.event.inputs.releaseVersion }}-distribution.zip
          CONSUMER-KEY: ${{ secrets.SDKMAN_CONSUMER_KEY }}
          CONSUMER-TOKEN: ${{ secrets.SDKMAN_CONSUMER_TOKEN }}
      - if: ${{ github.event.inputs.sdkmanSetDefault == 'true' }}
        uses: ./sdkman-default-action
        with:
          CANDIDATE: ${{ github.event.inputs.sdkmanCandidate }}
          VERSION: ${{ github.event.inputs.releaseVersion }}
          CONSUMER-KEY: ${{ secrets.SDKMAN_CONSUMER_KEY }}
          CONSUMER-TOKEN: ${{ secrets.SDKMAN_CONSUMER_TOKEN }}

