package com.buschmais.jqassistant.core.scanner.api;

import com.buschmais.jqassistant.core.model.api.descriptor.Descriptor;
import com.buschmais.jqassistant.core.store.api.Store;

import java.io.IOException;
import java.io.InputStream;

/**
 * Defines the interface for plugins for scanning files.
 *
 * @param <T> The type of descriptors generated by this plugin.
 */
public interface ArtifactScannerPlugin<T extends Descriptor> {

    /**
     * A {@link InputStreamSource} allows the plugin to open an input stream on a given file for scanning.
     */
    public interface InputStreamSource {
        InputStream openStream() throws IOException;
    }

    /**
     * Match given file name.
     *
     * @param file        The file or directory name.
     * @param isDirectory <code>true</code> if the file is a directory.
     * @return <code>true</code> If the file shall be scanned.
     */
    boolean matches(String file, boolean isDirectory);

    /**
     * Perform scanning of a file.
     *
     * @param store        The {@Store}.
     * @param streamSource The {@InputStreamSource}.
     * @return The descriptor representing the file.
     * @throws IOException If scanning fails.
     */
    T scanFile(Store store, InputStreamSource streamSource) throws IOException;

    /**
     * Perform scanning of a file.
     *
     * @param store The {@Store}.
     * @return The descriptor representing the file.
     * @throws IOException If scanning fails.
     */
    T scanDirectory(Store store, String name) throws IOException;
}
