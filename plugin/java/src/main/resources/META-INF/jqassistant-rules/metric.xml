<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0">

    <concept id="metric:Top10TypesPerArtifact">
        <description>Returns the top 10 artifacts regarding the number of contained types.</description>
        <cypher><![CDATA[
            MATCH
                (a:Artifact:File)-[:CONTAINS]->(t:Type:File)
            RETURN
                a.fqn as Artifact, COUNT(t) as Types
            ORDER BY
                Types DESC
            LIMIT 10
        ]]></cypher>
    </concept>

    <concept id="metric:Top10TypesPerPackage">
        <description>Returns the top 10 packages regarding the number of contained types.</description>
        <cypher><![CDATA[
            MATCH
                (p:Package:File)-[:CONTAINS]->(t:Type:File)
            RETURN
                p.fqn as Package, COUNT(t) as Types
            ORDER BY
                Types DESC
            LIMIT 10
        ]]></cypher>
    </concept>

    <concept id="metric:Top10MethodsPerType">
        <requiresConcept refId="dependency:Type"/>
        <description>Returns the top 10 types regarding to the number of declared methods (including constructors).
        </description>
        <cypher><![CDATA[
            MATCH
                (t:Type:File)-[:DECLARES]->(m:Method)
            RETURN
                t.fqn as Type, COUNT(m) as MethodCount
            ORDER BY
                MethodCount DESC
            LIMIT 10
        ]]></cypher>
    </concept>

    <concept id="metric:Top10FieldsPerType">
        <requiresConcept refId="dependency:Type"/>
        <description>Returns the top 10 types regarding to the number of declared fields.</description>
        <cypher><![CDATA[
            MATCH
                (t:Type:File)-[:DECLARES]->(f:Field)
            RETURN
                t.fqn as Type, COUNT(f) as FieldCount
            ORDER BY
                FieldCount DESC
            LIMIT 10
        ]]></cypher>
    </concept>

    <concept id="metric:Top10TypeFanOut">
        <requiresConcept refId="dependency:Type"/>
        <description>Returns the top 10 types regarding the number of other types they depend on.</description>
        <cypher><![CDATA[
            MATCH
                (t:Type:File)-[:DEPENDS_ON]->(dependency:Type)
            RETURN
                t.fqn as Type, COUNT(dependency) as Dependencies
            ORDER BY
                Dependencies DESC
            LIMIT 10
        ]]></cypher>
    </concept>

    <concept id="metric:Top10TypeFanIn">
        <requiresConcept refId="dependency:Type"/>
        <description>Returns the top 10 types regarding the number of other types depending on them.</description>
        <cypher><![CDATA[
            MATCH
                (t:Type:File)<-[:DEPENDS_ON]-(dependent:Type)
            RETURN
                t.fqn as Type, COUNT(dependent) as Dependents
            ORDER BY
                Dependents DESC
            LIMIT 10
        ]]></cypher>
    </concept>

    <metricGroup id="metric:ArtifactDependencies">
        <description>Artifact dependencies</description>
        <metric id="metric:TypesAndDependenciesPerArtifact">
            <description>Types per artifact and dependencies per artifact.</description>
            <requiresConcept refId="dependency:Type"/>
            <requiresConcept refId="dependency:Artifact"/>
            <cypher><![CDATA[
                    MATCH
                        (a:Artifact)-[:CONTAINS]->(t:Type)
                    WITH
                        a, count(t) as TypesPerArtifact
                    MATCH
                        (a)-[:DEPENDS_ON]->(d:Artifact)
                    RETURN
                        a.fqn as ArtifactName, TypesPerArtifact, count(d) as Dependencies
                ]]></cypher>
        </metric>
        <metric id="metric:TypesAndDependenciesPerPackageByArtifact">
            <description>Types per package and dependencies per package by artifact.</description>
            <requiresConcept refId="dependency:Package"/>
            <cypher><![CDATA[
                    MATCH
                        (a:Artifact)-[:CONTAINS]->(p:Package), (a)-[:CONTAINS]->(t:Type), (p)-[:CONTAINS]->(t)
                    WHERE
                        a.fqn={ArtifactName} with p, count(t) as TypesPerPackage
                    MATCH
                        (p)-[:DEPENDS_ON]->(d:Package)
                    RETURN
                        p.fqn as PackageName, TypesPerPackage, count(d) as Dependencies
                ]]></cypher>
            <parameterDefinition name="ArtifactName" type="string"/>
        </metric>
        <metric id="metric:ElementsAndDependenciesPerTypeByPackageAndArtifact">
            <description>Elements per type and dependencies per type by package and artifact.</description>
            <cypher><![CDATA[
                    MATCH
                        (a:Artifact)-[:CONTAINS]->(p:Package), (a)-[:CONTAINS]->(t:Type), (p)-[:CONTAINS]->(t)
                    WHERE
                        a.fqn={ArtifactName} and p.fqn={PackageName}
                    WITH
                        t
                    MATCH
                        (t)-[:DECLARES]->(e)
                    WHERE
                        e:Field or e:Method
                    WITH
                        t, count(e) as ElementsPerType
                    MATCH
                        (t)-[:DEPENDS_ON]->(d:Type)
                    RETURN
                        t.fqn as TypeName, ElementsPerType, count(d) as Dependencies
                ]]></cypher>
            <parameterDefinition name="ArtifactName" type="string"/>
            <parameterDefinition name="PackageName" type="string"/>
        </metric>
    </metricGroup>

</jqa:jqassistant-rules>