<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0">

    <concept id="dependency:Package">
        <description>Creates a DEPENDS_ON relationship between a packages if there are type dependencies between them.
        </description>
        <cypher><![CDATA[
            MATCH
                (p1:Package)-[:CONTAINS]->(t1:Type)-[:DEPENDS_ON]->(t2:Type)<-[:CONTAINS]-(p2:Package)
            WHERE
                p1<>p2
            MERGE
                (p1)-[:DEPENDS_ON]->(p2)
            RETURN
                p1 AS package, COUNT(DISTINCT p2) AS PackageDependencies
        ]]></cypher>
        <verify>
            <aggregation column="PackageDependencies" />
        </verify>
    </concept>

    <concept id="dependency:Artifact">
        <description>Creates a new DEPENDS_ON relationship between artifacts or updates an existing one with a 'used'
            property if there are type dependencies between them, i.e. if an artifact contains a type with a fully
            qualified
            name which a type from another artifact requires.
        </description>
        <cypher><![CDATA[
            MATCH
              (a1:Artifact)-[:CONTAINS]->(:Type)-[:DEPENDS_ON]->(type:Type)
            WITH
              a1,type.fqn as fqn
            MATCH
              (a2:Artifact)-[:CONTAINS]->(t2:Type)
            WHERE
              a1 <> a2
              and t2.fqn = fqn
            MERGE
              (a1)-[d:DEPENDS_ON]->(a2)
            SET
              d.used=true
            RETURN
              a1 AS Artifact, COLLECT(DISTINCT a2.fqn) AS Dependencies
        ]]></cypher>
    </concept>

    <constraint id="dependency:PackageCycles">
        <requiresConcept refId="dependency:Package"/>
        <description>There must be no cyclic package dependencies.</description>
        <cypher><![CDATA[
            MATCH
                (p1:Package)-[:DEPENDS_ON]->(p2:Package),
                path=shortestPath((p2)-[:DEPENDS_ON*]->(p1))
            WHERE
                p1<>p2
            RETURN
                p1 as Package, nodes(path) as Cycle
            ORDER BY
                Package.fqn
        ]]></cypher>
    </constraint>

    <constraint id="dependency:ArtifactCycles">
        <requiresConcept refId="dependency:Artifact"/>
        <description>There must be no cyclic artifact dependencies.</description>
        <cypher><![CDATA[
            MATCH
                (a1:Artifact)-[:DEPENDS_ON]->(a2:Artifact),
                path=shortestPath((a2)-[:DEPENDS_ON*]->(a1))
            WHERE
                a1<>a2
            RETURN
                a1 as Artifact, nodes(path) as Cycle
            ORDER BY
                Artifact.fqn
        ]]></cypher>
    </constraint>

</jqa:jqassistant-rules>
