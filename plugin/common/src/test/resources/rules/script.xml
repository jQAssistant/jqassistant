<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0">

    <concept id="javascript:XmlTestConcept" severity="major">
        <description>JavaScript test concept.</description>
       <script language="JavaScript">
           store.beginTransaction()
           // create a test descriptor
           var testDescriptor =
           store.create(com.buschmais.jqassistant.plugin.common.test.rule.model.TestLabelDescriptor.class);
           testDescriptor.setName("test");
           // prepare the result
           var columnNames = java.util.Arrays.asList("test");
           var row = new java.util.HashMap();
           row.put("test", context.toColumn(testDescriptor));
           var rows = java.util.Arrays.asList(context.toRow(rule, row));
           // return the result
           var status = com.buschmais.jqassistant.core.report.api.model.Result.Status.SUCCESS;
           store. commitTransaction()
           new com.buschmais.jqassistant.core.report.api.model.Result(rule, status, severity, columnNames, rows);
       </script>
    </concept>

    <constraint id="javascript:XmlTestConstraint" severity="blocker">
        <requiresConcept refId="javascript:XmlTestConcept"/>
        <description>JavaScript test constraint.</description>
        <script language="JavaScript">
            store.beginTransaction()
            var columnNames = java.util.Arrays.asList("test");
            var queryResult = store.executeQuery("match (t:TestLabel) return t");
            var testDescriptor = queryResult.getSingleResult().get("t",
            com.buschmais.jqassistant.plugin.common.test.rule.model.TestLabelDescriptor.class);
            var row = new java.util.HashMap();
            row.put("test", context.toColumn(testDescriptor));
            var rows = java.util.Arrays.asList(context.toRow(rule, row));
            var status = com.buschmais.jqassistant.core.report.api.model.Result.Status.SUCCESS;
            store.commitTransaction()
            new com.buschmais.jqassistant.core.report.api.model.Result(rule, status, severity, columnNames, rows);
        </script>
    </constraint>

    <concept id="groovy:XmlTestConcept" severity="major">
        <description>Groovy test concept.</description>
        <script language="Groovy">
            store.beginTransaction()
            // create a test descriptor
            def testDescriptor =
            store.create(com.buschmais.jqassistant.plugin.common.test.rule.model.TestLabelDescriptor.class);
            testDescriptor.setName("test");
            // prepare the result
            def columnNames = java.util.Arrays.asList("test");
            def row = new java.util.HashMap();
            row.put("test", context.toColumn(testDescriptor));
            def rows = java.util.Arrays.asList(context.toRow(rule, row));
            // return the result
            def status = com.buschmais.jqassistant.core.report.api.model.Result.Status.SUCCESS;
            store.commitTransaction()
            new com.buschmais.jqassistant.core.report.api.model.Result(rule, status, severity, columnNames, rows);
        </script>
    </concept>

    <constraint id="groovy:XmlTestConstraint" severity="blocker">
        <requiresConcept refId="groovy:XmlTestConcept"/>
        <description>Groovy test constraint.</description>
        <script language="Groovy">
            store.beginTransaction()
            def columnNames = java.util.Arrays.asList("test");
            def queryResult = store.executeQuery("match (t:TestLabel) return t");
            def testDescriptor = queryResult.getSingleResult().get("t",
            com.buschmais.jqassistant.plugin.common.test.rule.model.TestLabelDescriptor.class);
            def row = new java.util.HashMap();
            row.put("test", context.toColumn(testDescriptor));
            def rows = java.util.Arrays.asList(context.toRow(rule, row));
            def status = com.buschmais.jqassistant.core.report.api.model.Result.Status.SUCCESS;
            store.commitTransaction()
            new com.buschmais.jqassistant.core.report.api.model.Result(rule, status, severity, columnNames, rows);
        </script>
    </constraint>

    <concept id="ruby:XmlTestConcept" severity="major">
        <description>Ruby test concept.</description>
        <script language="ruby">
            store.beginTransaction
            # create a test descriptor
            testDescriptor = store.create com.buschmais.jqassistant.plugin.common.test.rule.model.TestLabelDescriptor.java_class
            testDescriptor.setName "test"
            # prepare the result
            columnNames = java.util.Arrays.asList "test"
            column = context.toColumn testDescriptor
            columns = java.util.HashMap.new
            columns.put "test", column
            row = context.toRow rule, columns
            rows = java.util.Arrays.asList row
            # return the result
            status = com.buschmais.jqassistant.core.report.api.model.Result::Status::SUCCESS
            store.commitTransaction
            com.buschmais.jqassistant.core.report.api.model.Result.new rule,status,severity,columnNames,rows
        </script>
    </concept>

    <constraint id="ruby:XmlTestConstraint" severity="blocker">
        <requiresConcept refId="ruby:XmlTestConcept"/>
        <description>Ruby test constraint.</description>
        <script language="ruby">
            store.beginTransaction
            columnNames = java.util.Arrays.asList "test"
            queryResult = store.executeQuery "match (t:TestLabel) return t"
            testDescriptor =
            queryResult.getSingleResult.get("t",com.buschmais.jqassistant.plugin.common.test.rule.model.TestLabelDescriptor.java_class)
            column = context.toColumn testDescriptor
            columns = java.util.HashMap.new
            columns.put "test", column
            row = context.toRow rule, columns
            rows = java.util.Arrays.asList row
            status = com.buschmais.jqassistant.core.report.api.model.Result::Status::FAILURE
            store.commitTransaction
            com.buschmais.jqassistant.core.report.api.model.Result.new rule,status,severity,columnNames,rows
        </script>
    </constraint>

</jqa:jqassistant-rules>
